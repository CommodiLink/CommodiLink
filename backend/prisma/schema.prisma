model User {
  id            Int       @id @default(autoincrement())
  email         String    @unique
  passwordHash  String
  name          String?
  companyId     Int?
  company       Company?  @relation(fields: [companyId], references: [id])
  createdAt     DateTime  @default(now())
  role          Role      @default(USER)
}

model Company {
  id           Int            @id @default(autoincrement())
  name         String
  kycStatus    KycStatus      @default(PENDING)
  subscription Subscription?
  users        User[]
  dealRooms    DealRoom[]     @relation("CompanyRooms")
}

model Subscription {
  id         Int      @id @default(autoincrement())
  company    Company  @relation(fields: [companyId], references: [id])
  companyId  Int      @unique
  plan       String   // e.g. PRO, ENTERPRISE
  status     SubStatus @default(ACTIVE)
  validUntil DateTime
}

model DealRoom {
  id           Int             @id @default(autoincrement())
  title        String
  commodity    String?
  volume       String?
  status       DealStatus      @default(DRAFT)
  companyId    Int
  company      Company         @relation("CompanyRooms", fields: [companyId], references: [id])
  members      DealRoomMember[]
  messages     DealMessage[]
  documents    DealDocument[]
  createdAt    DateTime        @default(now())
}

model DealRoomMember {
  id         Int     @id @default(autoincrement())
  room       DealRoom @relation(fields: [roomId], references: [id])
  roomId     Int
  user       User     @relation(fields: [userId], references: [id])
  userId     Int
  role       RoomRole @default(VIEWER)
}

model DealMessage {
  id        Int      @id @default(autoincrement())
  room      DealRoom @relation(fields: [roomId], references: [id])
  roomId    Int
  author    User     @relation(fields: [authorId], references: [id])
  authorId  Int
  text      String
  createdAt DateTime @default(now())
}

model DealDocument {
  id        Int      @id @default(autoincrement())
  room      DealRoom @relation(fields: [roomId], references: [id])
  roomId    Int
  name      String
  url       String   // use signed URLs from S3/GCS
  createdAt DateTime @default(now())
}

enum Role { USER ADMIN }
enum RoomRole { VIEWER EDITOR OWNER }
enum KycStatus { PENDING VERIFIED REJECTED }
enum SubStatus { ACTIVE PAST_DUE CANCELED }
enum DealStatus { DRAFT ACTIVE CLOSED }

